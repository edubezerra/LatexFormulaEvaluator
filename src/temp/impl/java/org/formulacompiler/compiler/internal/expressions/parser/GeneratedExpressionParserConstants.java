/* Generated By:JavaCC: Do not edit this line. GeneratedExpressionParserConstants.java */
package org.formulacompiler.compiler.internal.expressions.parser;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface GeneratedExpressionParserConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int SINGLE_LINE_COMMENT = 9;
  /** RegularExpression Id. */
  int FORMAL_COMMENT = 10;
  /** RegularExpression Id. */
  int MULTI_LINE_COMMENT = 11;
  /** RegularExpression Id. */
  int DIGITS = 13;
  /** RegularExpression Id. */
  int DIGIT = 14;
  /** RegularExpression Id. */
  int ALPHAS = 15;
  /** RegularExpression Id. */
  int ALPHA = 16;
  /** RegularExpression Id. */
  int LETTER = 17;
  /** RegularExpression Id. */
  int CAPS = 18;
  /** RegularExpression Id. */
  int CAP = 19;
  /** RegularExpression Id. */
  int INT_CONST = 20;
  /** RegularExpression Id. */
  int DBL_CONST = 21;
  /** RegularExpression Id. */
  int EXPONENT = 22;
  /** RegularExpression Id. */
  int STR_CONST = 23;
  /** RegularExpression Id. */
  int SHEET = 291;
  /** RegularExpression Id. */
  int ABS = 292;
  /** RegularExpression Id. */
  int BROKEN_REF = 293;
  /** RegularExpression Id. */
  int CELLR1C1 = 294;
  /** RegularExpression Id. */
  int ROW = 295;
  /** RegularExpression Id. */
  int COL = 296;
  /** RegularExpression Id. */
  int IDX = 297;
  /** RegularExpression Id. */
  int LOCAL_CELLA1 = 298;
  /** RegularExpression Id. */
  int CELLA1 = 299;
  /** RegularExpression Id. */
  int RANGEA1 = 300;
  /** RegularExpression Id. */
  int LOCAL_ROW_RANGEA1_OOXML = 301;
  /** RegularExpression Id. */
  int LOCAL_COL_RANGEA1_OOXML = 302;
  /** RegularExpression Id. */
  int LOCAL_CELL_OR_RANGEA1_OOXML = 303;
  /** RegularExpression Id. */
  int RANGEA1_OOXML = 304;
  /** RegularExpression Id. */
  int RANGE_SEPARATOR = 305;
  /** RegularExpression Id. */
  int LEFT_BRACKET = 306;
  /** RegularExpression Id. */
  int CELLA1_ODF = 307;
  /** RegularExpression Id. */
  int RANGE_SEPARATOR_ODF = 308;
  /** RegularExpression Id. */
  int SHEET_ODF = 309;
  /** RegularExpression Id. */
  int SHEET_NAME_ODF = 310;
  /** RegularExpression Id. */
  int RIGHT_BRACKET = 311;
  /** RegularExpression Id. */
  int NAME = 312;
  /** RegularExpression Id. */
  int SEP = 313;
  /** RegularExpression Id. */
  int TYPE = 314;

  /** Lexical state. */
  int DEFAULT = 0;
  /** Lexical state. */
  int IN_SINGLE_LINE_COMMENT = 1;
  /** Lexical state. */
  int IN_FORMAL_COMMENT = 2;
  /** Lexical state. */
  int IN_MULTI_LINE_COMMENT = 3;
  /** Lexical state. */
  int IN_ODF_CELL_REF = 4;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\r\"",
    "\"\\n\"",
    "\"\\t\"",
    "\"\\f\"",
    "\"//\"",
    "<token of kind 7>",
    "\"/*\"",
    "<SINGLE_LINE_COMMENT>",
    "\"*/\"",
    "\"*/\"",
    "<token of kind 12>",
    "<DIGITS>",
    "<DIGIT>",
    "<ALPHAS>",
    "<ALPHA>",
    "<LETTER>",
    "<CAPS>",
    "<CAP>",
    "<INT_CONST>",
    "<DBL_CONST>",
    "<EXPONENT>",
    "<STR_CONST>",
    "\"_min_\"",
    "\"_max_\"",
    "\"=\"",
    "\"<>\"",
    "\"<\"",
    "\"<=\"",
    "\">\"",
    "\">=\"",
    "\"&\"",
    "\"+\"",
    "\"-\"",
    "\"*\"",
    "\"/\"",
    "\"^\"",
    "\"%\"",
    "\"(\"",
    "\")\"",
    "\"_minvalue\"",
    "\"_maxvalue\"",
    "\"@\"",
    "\"ABS\"",
    "\"ACOS\"",
    "\"ACOSH\"",
    "\"ASC\"",
    "\"ASIN\"",
    "\"ASINH\"",
    "\"ATAN\"",
    "\"ATANH\"",
    "\"ATAN2\"",
    "\"AND\"",
    "\"AVEDEV\"",
    "\"AVERAGE\"",
    "\"BETADIST\"",
    "\"BETAINV\"",
    "\"BINOMDIST\"",
    "\"CEILING\"",
    "\"CHAR\"",
    "\"CHIDIST\"",
    "\"CHIINV\"",
    "\"CHITEST\"",
    "\"CHOOSE\"",
    "\"CLEAN\"",
    "\"CODE\"",
    "\"COLUMN\"",
    "\"COMBIN\"",
    "\"CONCATENATE\"",
    "\"CONFIDENCE\"",
    "\"CORREL\"",
    "\"COS\"",
    "\"COSH\"",
    "\"COUNT\"",
    "\"COUNTA\"",
    "\"COUNTIF\"",
    "\"COVAR\"",
    "\"CRITBINOM\"",
    "\"DATE\"",
    "\"DATEVALUE\"",
    "\"DAVERAGE\"",
    "\"DAY\"",
    "\"DAYS360\"",
    "\"DB\"",
    "\"DCOUNT\"",
    "\"DCOUNTA\"",
    "\"DDB\"",
    "\"DEGREES\"",
    "\"DEVSQ\"",
    "\"DGET\"",
    "\"DMAX\"",
    "\"DMIN\"",
    "\"DOLLAR\"",
    "\"DPRODUCT\"",
    "\"DSTDEV\"",
    "\"DSTDEVP\"",
    "\"DSUM\"",
    "\"DVAR\"",
    "\"DVARP\"",
    "\"ERF\"",
    "\"ERFC\"",
    "\"err\"",
    "\"ERROR.TYPE\"",
    "\"ERRORTYPE\"",
    "\"EXACT\"",
    "\"EXPONDIST\"",
    "\"EVEN\"",
    "\"EXP\"",
    "\"FACT\"",
    "\"FALSE\"",
    "\"false\"",
    "\"FDIST\"",
    "\"FINV\"",
    "\"FTEST\"",
    "\"FIND\"",
    "\"FISHER\"",
    "\"FISHERINV\"",
    "\"FIXED\"",
    "\"FLOOR\"",
    "\"FORECAST\"",
    "\"FV\"",
    "\"GAMMADIST\"",
    "\"GAMMAINV\"",
    "\"GAMMALN\"",
    "\"GEOMEAN\"",
    "\"HARMEAN\"",
    "\"HLOOKUP\"",
    "\"HOUR\"",
    "\"HYPGEOMDIST\"",
    "\"IF\"",
    "\"INDEX\"",
    "\"INT\"",
    "\"INTERCEPT\"",
    "\"IRR\"",
    "\"ISBLANK\"",
    "\"ISERR\"",
    "\"ISERROR\"",
    "\"ISLOGICAL\"",
    "\"ISNA\"",
    "\"ISNONTEXT\"",
    "\"ISNUMBER\"",
    "\"ISTEXT\"",
    "\"KURT\"",
    "\"LARGE\"",
    "\"LEFT\"",
    "\"LEGACY.CHIDIST\"",
    "\"LEGACY.CHIINV\"",
    "\"LEGACY.CHITEST\"",
    "\"LEGACY.FDIST\"",
    "\"LEGACY.FINV\"",
    "\"LEGACY.NORMSDIST\"",
    "\"LEGACY.NORMSINV\"",
    "\"LEN\"",
    "\"LENB\"",
    "\"LN\"",
    "\"LOG\"",
    "\"LOG10\"",
    "\"LOGINV\"",
    "\"LOGNORMDIST\"",
    "\"LOOKUP\"",
    "\"LOWER\"",
    "\"MAX\"",
    "\"MATCH\"",
    "\"MDETERM\"",
    "\"MEDIAN\"",
    "\"MID\"",
    "\"MIN\"",
    "\"MINUTE\"",
    "\"MIRR\"",
    "\"MOD\"",
    "\"MODE\"",
    "\"MONTH\"",
    "\"MROUND\"",
    "\"N\"",
    "\"NA\"",
    "\"NEGBINOMDIST\"",
    "\"NORMDIST\"",
    "\"NORMINV\"",
    "\"NORMSDIST\"",
    "\"NORMSINV\"",
    "\"NOT\"",
    "\"NOW\"",
    "\"NPER\"",
    "\"NPV\"",
    "\"ODD\"",
    "\"OR\"",
    "\"ORG.OPENOFFICE.ERRORTYPE\"",
    "\"PEARSON\"",
    "\"PERMUT\"",
    "\"PERCENTILE\"",
    "\"PERCENTRANK\"",
    "\"PI\"",
    "\"PMT\"",
    "\"POISSON\"",
    "\"POWER\"",
    "\"PROB\"",
    "\"PRODUCT\"",
    "\"PROPER\"",
    "\"PV\"",
    "\"QUARTILE\"",
    "\"RADIANS\"",
    "\"RAND\"",
    "\"RANK\"",
    "\"RATE\"",
    "\"REPLACE\"",
    "\"REPT\"",
    "\"RIGHT\"",
    "\"ROMAN\"",
    "\"ROUND\"",
    "\"ROUNDDOWN\"",
    "\"ROUNDUP\"",
    "\"ROW\"",
    "\"RSQ\"",
    "\"SEARCH\"",
    "\"SECOND\"",
    "\"SIGN\"",
    "\"SIN\"",
    "\"SINH\"",
    "\"SKEW\"",
    "\"SLN\"",
    "\"SLOPE\"",
    "\"SMALL\"",
    "\"SQRT\"",
    "\"STANDARDIZE\"",
    "\"STDEV\"",
    "\"STDEVP\"",
    "\"STDEVPA\"",
    "\"STEYX\"",
    "\"SUBSTITUTE\"",
    "\"SUM\"",
    "\"SUMIF\"",
    "\"SUMSQ\"",
    "\"SUMX2MY2\"",
    "\"SUMX2PY2\"",
    "\"SUMXMY2\"",
    "\"SYD\"",
    "\"T\"",
    "\"TAN\"",
    "\"TANH\"",
    "\"TDIST\"",
    "\"TINV\"",
    "\"TTEST\"",
    "\"TEXT\"",
    "\"TIME\"",
    "\"TIMEVALUE\"",
    "\"TODAY\"",
    "\"TRIM\"",
    "\"TRIMMEAN\"",
    "\"TRUE\"",
    "\"true\"",
    "\"TRUNC\"",
    "\"UPPER\"",
    "\"VALUE\"",
    "\"VAR\"",
    "\"VARA\"",
    "\"VARP\"",
    "\"VDB\"",
    "\"VLOOKUP\"",
    "\"WEEKDAY\"",
    "\"WEIBULL\"",
    "\"YEAR\"",
    "\"ZTEST\"",
    "\"!\"",
    "\"rules\"",
    "\"{\"",
    "\"}\"",
    "\"rewrite\"",
    "\"def\"",
    "\"#\"",
    "\"let\"",
    "\"if\"",
    "\"fold\"",
    "\"fold/reduce\"",
    "\"iterate\"",
    "\"apply\"",
    "\"in\"",
    "\"then\"",
    "\"else\"",
    "\"with\"",
    "\"index\"",
    "\"each\"",
    "\"as\"",
    "\"count\"",
    "\"into\"",
    "\"when\"",
    "\"empty\"",
    "\"end\"",
    "\"to\"",
    "\"list\"",
    "\"vectors\"",
    "<SHEET>",
    "<ABS>",
    "\"#REF!\"",
    "<CELLR1C1>",
    "<ROW>",
    "<COL>",
    "<IDX>",
    "<LOCAL_CELLA1>",
    "<CELLA1>",
    "<RANGEA1>",
    "<LOCAL_ROW_RANGEA1_OOXML>",
    "<LOCAL_COL_RANGEA1_OOXML>",
    "<LOCAL_CELL_OR_RANGEA1_OOXML>",
    "<RANGEA1_OOXML>",
    "\":\"",
    "\"[\"",
    "<CELLA1_ODF>",
    "\":\"",
    "<SHEET_ODF>",
    "<SHEET_NAME_ODF>",
    "\"]\"",
    "<NAME>",
    "<SEP>",
    "<TYPE>",
  };

}
